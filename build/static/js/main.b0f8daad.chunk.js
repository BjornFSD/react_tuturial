(this.webpackJsonpreact_tutorial=this.webpackJsonpreact_tutorial||[]).push([[0],{19:function(e,a,i){},20:function(e,a,i){},27:function(e,a,i){"use strict";i.r(a);var t=i(1),n=i(0),o=i.n(n),r=i(4),c=i.n(r),s=(i(19),i(20),i(5));function d(){return(d=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var i=arguments[a];for(var t in i)Object.prototype.hasOwnProperty.call(i,t)&&(e[t]=i[t])}return e}).apply(this,arguments)}function z(e,a){if(null==e)return{};var i,t,n=function(e,a){if(null==e)return{};var i,t,n={},o=Object.keys(e);for(t=0;t<o.length;t++)i=o[t],a.indexOf(i)>=0||(n[i]=e[i]);return n}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)i=o[t],a.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(n[i]=e[i])}return n}var m=n.createElement("g",{id:"Strzalka"},n.createElement("path",{id:"S3",d:"M0 0L52.5 47.103L105 0V9.84242L72.9362 39.0182L52.5 58L32.0638 39.0182L0 9.84242V0Z",fill:"#61D9FB"}),n.createElement("path",{id:"S2",d:"M0 21L52.5 67.2909L105 21V30.6727L72.9362 59.3455L52.5 78L32.0638 59.3455L0 30.6727V21Z",fill:"#61D9FB"}),n.createElement("path",{id:"S1",d:"M0 42L52.5 89.103L105 42V51.8424L72.9362 81.0182L52.5 100L32.0638 81.0182L0 51.8424V42Z",fill:"#61D9FB"}));function w(e,a){var i=e.title,t=e.titleId,o=z(e,["title","titleId"]);return n.createElement("svg",d({width:105,height:100,viewBox:"0 0 105 100",fill:"none",xmlns:"http://www.w3.org/2000/svg",ref:a,"aria-labelledby":t},o),i?n.createElement("title",{id:t},i):null,m)}var y=n.forwardRef(w),l=(i.p,i(11));var p=function(e){var a=e.content,i=Object(n.useRef)(null);return Object(n.useEffect)((function(){var e=Object(s.a)(i.current.children,1)[0].getElementById("Strzalka");l.a.set([e],{autoAlpha:1}),l.a.timeline({defaults:{repeat:-1,ease:"power0"}}).fromTo(e,{y:"-=101"},{duration:4,y:"+=203"})}),[]),Object(t.jsxs)("div",{className:"home",children:[Object(t.jsx)("div",{className:"home_title",children:"ReactJS w pigu\u0142ce"}),Object(t.jsx)("div",{ref:i,className:"arrow",children:Object(t.jsx)(y,{onClick:function(){return window.scrollTo({top:a.current.offsetTop,behavior:"smooth"})}})})]})},u=i(6);var j=function(e){var a=e.content,i=u.map((function(e){var a=Object.keys(u).length,i=(e.id-1)/(a-1)/2,n={background:"rgba(141, 227, 232, ".concat(i,")")};return Object(t.jsxs)("div",{className:"article",style:n,id:"".concat(e.id),children:[Object(t.jsx)("div",{className:"article_title",children:e.title}),Object(t.jsx)("div",{className:"article_desc",children:e.desc}),Object(t.jsx)("img",{className:"article_img",src:e.img_undertext1,alt:""}),Object(t.jsx)("div",{className:"article_subtitle",children:e.subtitle}),Object(t.jsx)("img",{className:"article_img",src:e.img,alt:""}),Object(t.jsx)("div",{className:"article_desc",children:e.desc_2}),Object(t.jsx)("img",{className:"article_img",src:e.img_undertext2,alt:""}),Object(t.jsx)("div",{className:"article_subtitle",children:e.subtitle_2}),Object(t.jsx)("img",{className:"article_img",src:e.img_2,alt:""}),Object(t.jsx)("div",{className:"article_desc",children:e.desc_3}),Object(t.jsx)("img",{className:"article_img",src:e.img_3,alt:""}),Object(t.jsx)("div",{className:"article_subtitle",children:e.subtitle_3}),Object(t.jsx)("img",{className:"article_img",src:e.img_4,alt:""}),Object(t.jsx)("div",{className:"article_desc",children:e.desc_4}),Object(t.jsx)("img",{className:"article_img",src:e.img_5,alt:""})]},"".concat(e.id))})),n=u.map((function(e){return Object(t.jsx)("div",{className:"sidebar_titles",children:Object(t.jsxs)("p",{onClick:function(){console.log(document.getElementById(e.id).offsetTop),window.scrollTo({top:document.getElementById(e.id).offsetTop-5,behavior:"smooth"})},children:[e.id,". ",e.title]})},"".concat(e.id))}));return Object(t.jsxs)("div",{className:"content",ref:a,children:[Object(t.jsxs)("div",{className:"sidebar",children:[Object(t.jsx)("p",{className:"sidebar_title",children:"Spis tre\u015bci"}),n]}),Object(t.jsx)("div",{className:"textbar",children:i})]})},k=i(29);function b(){return(b=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var i=arguments[a];for(var t in i)Object.prototype.hasOwnProperty.call(i,t)&&(e[t]=i[t])}return e}).apply(this,arguments)}function g(e,a){if(null==e)return{};var i,t,n=function(e,a){if(null==e)return{};var i,t,n={},o=Object.keys(e);for(t=0;t<o.length;t++)i=o[t],a.indexOf(i)>=0||(n[i]=e[i]);return n}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)i=o[t],a.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(n[i]=e[i])}return n}var h=n.createElement("g",{id:"arrowToTop"},n.createElement("path",{id:1,d:"M13.0607 0.93934C12.4749 0.353553 11.5251 0.353553 10.9393 0.93934L1.3934 10.4853C0.807612 11.0711 0.807612 12.0208 1.3934 12.6066C1.97919 13.1924 2.92893 13.1924 3.51472 12.6066L12 4.12132L20.4853 12.6066C21.0711 13.1924 22.0208 13.1924 22.6066 12.6066C23.1924 12.0208 23.1924 11.0711 22.6066 10.4853L13.0607 0.93934ZM13.5 3.5L13.5 2L10.5 2L10.5 3.5L13.5 3.5Z",fill:"#61D9FB"}));function f(e,a){var i=e.title,t=e.titleId,o=g(e,["title","titleId"]);return n.createElement("svg",b({width:20,height:20,viewBox:"0 0 24 14",fill:"none",xmlns:"http://www.w3.org/2000/svg",ref:a,"aria-labelledby":t},o),i?n.createElement("title",{id:t},i):null,h)}var O=n.forwardRef(f);i.p;var v=function(e){var a=e.content,i=Object(n.useRef)(null),o=Object(k.a)().y,r=Object(n.useState)(!1),c=Object(s.a)(r,2),d=c[0],z=c[1];return Object(n.useEffect)((function(){var e=document.querySelector(".content").offsetTop;z(o>e)}),[o]),!!d&&Object(t.jsx)("div",{ref:i,onClick:function(){return window.scrollTo({top:a.current.offsetTop,behavior:"smooth"})},className:"scroll_to-top",children:Object(t.jsx)(O,{className:"scroll_to-top--animation"})})},_=i(3);var x=function(){var e=Object(n.useRef)(null),a=Object(_.c)((function(e){return e.counter})),i=Object(_.c)((function(e){return e.isLogged})),o=Object(_.b)();return Object(t.jsxs)("div",{className:"App",children:[Object(t.jsx)(v,{content:e}),Object(t.jsx)(p,{content:e}),Object(t.jsx)(j,{content:e}),Object(t.jsxs)("div",{className:"redux",children:[Object(t.jsxs)("h1",{children:["Counter: ",a]}),Object(t.jsx)("button",{onClick:function(){o({type:"INCREMENT"})},children:"plusik"}),Object(t.jsx)("button",{onClick:function(){o({type:"DECREMENT"})},children:"minusik"}),Object(t.jsx)("button",{onClick:function(){o({type:"SIGN_IN"})},children:i?Object(t.jsx)("p",{children:"Wyloguj"}):Object(t.jsx)("p",{children:"Zaloguj"})}),i?Object(t.jsx)("h1",{children:"Jeste\u015b zalogowany"}):Object(t.jsx)("h1",{children:"Jeste\u015b wylogowany"}),console.log("".concat(a," i ").concat(i))]})]})},S=i(2),N=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,a=arguments.length>1?arguments[1]:void 0;switch(a.type){case"INCREMENT":return e+1;case"DECREMENT":return e-1;default:return e}},R=function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],a=arguments.length>1?arguments[1]:void 0;switch(a.type){case"SIGN_IN":return!e;default:return e}},E=Object(S.b)({counter:N,isLogged:R}),J=Object(S.c)(E,window.__REDUX_DEVTOOLS_EXTENSION__&&window.__REDUX_DEVTOOLS_EXTENSION__());c.a.render(Object(t.jsx)(_.a,{store:J,children:Object(t.jsx)(o.a.StrictMode,{children:Object(t.jsx)(x,{})})}),document.getElementById("root"))},6:function(e){e.exports=JSON.parse('[{"id":1,"title":"Czym jest react?","desc":"React JS jest kolejn\u0105 bibliotek\u0105 JavaScript u\u017cywan\u0105 do budowania interaktywnych stron internetowych. Dla zrozumienia zr\xf3bmy krok w tym i zobaczmy z czym to si\u0119 je. ","subtitle":" Do czego s\u0142u\u017cy JavaScript? \\n","desc_2":"JS u\u017cywany jest do tworzenia i kontrolowania dynamicznych stron. \\n  Dynamiczne strony zawieraj\u0105 rzeczy jak animowane grafiki, pokaz slajd\xf3w zdj\u0119\u0107 oraz interaktywne formularze.\\n \\n Za ka\u017cdym razem, gdy odwiedzasz stron\u0119 internetow\u0105, na kt\xf3rej rzeczy si\u0119 poruszaj\u0105, od\u015bwie\u017caj\u0105 lub w inny spos\xf3b zmieniaj\u0105 si\u0119 na Twoim ekranie, nie wymagaj\u0105c od Ciebie r\u0119cznego prze\u0142adowania strony internetowej, istnieje bardzo du\u017ca szansa, \u017ce JS jest j\u0119zykiem, w kt\xf3rym to si\u0119 dzieje."},{"id":2,"title":"Dlaczego developersi u\u017cywaj\u0105 ReactJS?","desc":"Biblioteka React specjalizuje si\u0119 w pomaganiu developerom budowania interfejsu u\u017cytkownika. Je\u015bli chodzi o strony i aplikacje internetowe, interfejsty s\u0105 zbiorem menu ekranowych, wyszukiwarek, przycisk\xf3w i innych element\xf3w, z kt\xf3rymi kto\u015b wchodzi w interakcj\u0119, aby korzysta\u0107 z witryny lub aplikacji.","desc_2":"Przed ReactJS, developerzy cz\u0119sto zatrzymywali si\u0119 na budowaniu inferfejsu w czystym JavaScript lub z mniej sfokusowanym na interfejs jQuery, przez co pope\u0142niali wi\u0119cej bug\xf3w i b\u0142\u0119d\xf3w. React posiada dwie kluczowe funkcje, kt\xf3re zwi\u0119kszaj\u0105 jego atrakcyjno\u015b\u0107 dla developer\xf3w: \\n \\n  -JSX \\n  -Virtual DOM \\n \\n Przejd\u017amy do wy\u017cej podanych zagadnie\u0144, aby lepiej zrozumie\u0107 ReactJS"},{"id":3,"title":"JSX","desc":"Podstaw\u0105 podstaw ka\u017cdej strony jest dokument HTML. Przegl\u0105darki czytaj\u0105 te dokumenty i naturalnie wy\u015bwietlaj\u0105 je na twoim urz\u0105dzeniu. W trakcie procesu tworz\u0105 obiektowy model dokumentu tzw. DOM, czyli drzewo kt\xf3re reprezentuje spos\xf3b u\u0142o\u017cenia strony internetowej. Do tego deweloperzy mog\u0105 dodawa\u0107 dynamiczn\u0105 zawarto\u015b\u0107 do swoich projekt\xf3w poprzez modyfikacj\u0119 DOM za pomoc\u0105 m.in. JavaScript.","desc_2":"JSX(JavaScript eXtension) jest rozszerzeniem React, kt\xf3re zdecydowanie u\u0142atwia im modyfikowanie DOM za pomoc\u0105 prostego kodu w stylu HTML. JSX jest kompatybilny z ka\u017cd\u0105 platform\u0105, z kt\xf3r\u0105 mo\u017ce pracowa\u0107. \\n \\n Nie jest to jednak tylko kwesta wygody, u\u017cywanie JSX do aktualizacji DOM-u prowadzi do znacz\u0105cej poprawy wydajno\u015bci strony i efektywno\u015bci rozwoju, chodzi o kolejn\u0105 funkcj\u0119 jak\u0105 zaprezentuje, Virtual DOM."},{"id":4,"title":"Virtual DOM","desc":"Je\u015bli nie u\u017cywasz React JS (i JSX), Twoja strona u\u017cyje HTML do aktualizacji DOM (proces, kt\xf3ry sprawia, \u017ce rzeczy zmieniaj\u0105 si\u0119 na ekranie bez konieczno\u015bci r\u0119cznego od\u015bwie\u017cania strony). Dzia\u0142a to dobrze dla prostych, statycznych stron internetowych, ale dla dynamicznych stron, kt\xf3re wymagaj\u0105 intensywnej interakcji z u\u017cytkownikiem, mo\u017ce sta\u0107 si\u0119 problemem (poniewa\u017c ca\u0142y DOM musi si\u0119 prze\u0142adowywa\u0107 za ka\u017cdym razem, gdy u\u017cytkownik kliknie funkcj\u0119 wymagaj\u0105c\u0105 od\u015bwie\u017cenia strony). \\n \\n Jednak\u017ce je\u015bli developerzy u\u017cywaj\u0105 JSX do manipulacji i aktualizacji DOM-u, ReactJS tworzy co\u015b co nazywa si\u0119 Virtual DOM. Jest on kopi\u0105 strony DOM, a React JS u\u017cywa tej kopii, aby zobaczyc, kt\xf3re cz\u0119\u015bci rzeczywistego DOM musz\u0105 si\u0119 zmieni\u0107 gdy takie zdarzenie ma miejsce i je podmienia np. klikni\u0119cie jakiego\u015b przycisku. \\n Ten rodzaj selektywnej aktualizacji zajmuje mniej czasu i mniej mocy obliczeniowej, co jest bardziej odczuwalne na wi\u0119kszej skali projektu. \\n \\n","img":"./img/VirtualDOM.png"},{"id":5,"title":"Komponenty i ich podzia\u0142","desc":"Komponenty pozwalaj\u0105 podzieli\u0107 interfejs u\u017cytkownika na niezale\u017cne, pozwalaj\u0105ce na ponowne u\u017cycie cz\u0119\u015bci i my\u015ble\u0107 o ka\u017cdej z nich osobno. Komponenty przyjmuj\u0105 warto\u015bci na wej\u015bciu zwane propsami i zwracaj\u0105 reactowe elementy. \\n \\n","img":"./img/component.png","desc_2":"\\n Na powy\u017cszym zdj\u0119ciu mo\u017cemy zauwa\u017cy\u0107 jak rozdzielone s\u0105 komponenty, aby kod by\u0142 bardziej czytelny i daj\u0119 nam r\xf3wnie\u017c swobod\u0119 poruszania si\u0119 pomi\u0119dzy plikami. \\n \\n \\n \\n ","img_2":"./img/componentProps.png","desc_3":"\\n Z kolei tutaj mamy przyk\u0142ad wykorzystania komponentu, renderowanie tego komponentu oraz wykorzystanie w\u0142a\u015bciwo\u015bci w danych komponentach. Takie komponenty nazywamy \u201ckomponentami funkcyjnymi\u201d, gdy\u017c s\u0105 one dos\u0142ownie javascriptowymi funkcjami."},{"id":6,"title":"Zdarzenia, eventy JS - React","desc":"Czym s\u0105 zdarzenia? Wi\u0119kszo\u015b\u0107 interakcji na stronie internetowej czy aplikacji opiera si\u0119 o zdarzenia(eventy). W czystym JavaScript, aby m\xf3c obs\u0142ugiwa\u0107 eventy u\u017cywamy do tego przeznaczonych funkcji, kt\xf3re tworz\u0105 i usuwaj\u0105 tzw. event listenery. Raczej jest to wiadome jak wygl\u0105da sk\u0142adnia, ale przyjrzyjmy si\u0119 jej dla przypomnienia. \\n \\n ","subtitle":"JavaScript \\n \\n","img":"./img/eventJS.png","desc_2":"\\n Wy\u017cej mamy ukazany do\u015b\u0107 dlugo kod jak na prost\u0105 funkcj\u0119 wy\u015bwietlania alerta. Jest du\u017co sk\u0142adni do zapami\u0119tania i dla pocz\u0105tkuj\u0105cego jest to naturalnie niewygodne i nieczytelne.\\n \\n","subtitle_2":"React \\n \\n ","img_2":"./img/eventReact.png","desc_3":"\\n Natomiast tutaj widzimy jak proste jest utworzenie prostego alerta, kod jest bardziej schludny i prosty. React r\xf3wnie\u017c za Ciebie odpina zdarzenia gdy komponent jest niszczony i nie trzeba si\u0119 tym martwi\u0107."},{"id":7,"title":"State, setState, stan komponentu","desc":"Co robi state? State s\u0142u\u017cy do przechowywania stanu komponentu. State mo\u017cna mutowa\u0107 dzi\u0119ki funkcji setState, w por\xf3wnaniu do pros\xf3w kt\xf3re s\u0105 niemutowalne. Paradoksalnie mozna mutowa\u0107 propsy, ale przyje\u0142a si\u0119 taka zasada, \u017ce nie zmieniamy ich z wn\u0119trza komponentu, do kt\xf3rego zosta\u0142y przekazane. A, wi\u0119c na prostym przyk\u0142adzie mo\u017cemy pokaza\u0107, ze state b\u0119dzie przechowywa\u0107 np. licznik. \\n \\n","img":"./img/state1.png","desc_2":"\\n Metoda bind pomaga zapewni\u0107, \u017ce drugi fragment dzia\u0142a tak samo jak pierwszy."},{"id":8,"title":"Importowanie i Eksportowanie","desc":"React Apps s\u0105 w zasadzie zbiorem interaktywnych komponent\xf3w, same komponenty nie wystarcz\u0105, aby stworzy\u0107 pe\u0142nowarto\u015bciow\u0105 aplikacj\u0119 React, poniewa\u017c aby stworzy\u0107 zbi\xf3r komponent\xf3w musimy najpierw pozna\u0107 spos\xf3b wykorzystania i ponownego wykorzystania komponent\xf3w, kt\xf3re mog\u0142y by\u0107 zdefiniowane gdzie indziej. Aby to zrobi\u0107, musimy zna\u0107 dwie operacje szeroko znane jako Import i Eksport. \\n\\n","subtitle":"Importowanie","desc_2":"Importujemy domy\u015blny eksport: M\xf3wi si\u0119, \u017ce ka\u017cdy modu\u0142 ma co najwy\u017cej jeden domy\u015blny eksport. Aby zaimportowa\u0107 domy\u015blny eksport z pliku, mo\u017cemy u\u017cy\u0107 tylko adresu i u\u017cy\u0107 s\u0142owa kluczowego, kt\xf3re zosta\u0142o zaimportowane przed nim, lub mo\u017cemy nada\u0107 nazw\u0119 importowi sk\u0142adaj\u0105cemu si\u0119 na nast\u0119puj\u0105c\u0105 sk\u0142adni\u0119. \\n\\n import NAZWA from ADRES \\n\\n Importowanie nazwanych warto\u015bci: Ka\u017cdy modu\u0142 mo\u017ce mie\u0107 kilka nazwanych parametr\xf3w i w celu zaimportowania jednego z nich powinni\u015bmy u\u017cy\u0107 nast\u0119puj\u0105cej sk\u0142adni. \\n\\n import { PARAMETR } from ADRES \\n\\n Importowanie kombinacji domy\u015blnego eksportu i nazwanych warto\u015bci: Z tytu\u0142u jasno wynika, \u017ce musimy zobaczy\u0107 sk\u0142adni\u0119 tego samego. Aby zaimportowa\u0107 kombinacj\u0119, powinni\u015bmy u\u017cy\u0107 nast\u0119puj\u0105cej sk\u0142adni. \\n\\n import NAZWA, { PARAMETR, ..} from ADRES \\n\\n","img_undertext2":"./img/import.png","subtitle_2":"\\nEksportowanie","desc_3":"Teraz, import jest operacj\u0105, kt\xf3ra wymaga zgody modu\u0142u. Importowanie jest mo\u017cliwe tylko wtedy, gdy modu\u0142 lub nazwana w\u0142a\u015bciwo\u015b\u0107, kt\xf3ra ma by\u0107 zaimportowana, zosta\u0142a wyeksportowana w jego deklaracji. W React u\u017cywamy s\u0142owa kluczowego export do wyeksportowania konkretnego modu\u0142u, nazwanego parametru lub kombinacji. Zobaczmy teraz r\xf3\u017cne sposoby, na jakie mo\u017cemy u\u017cy\u0107 operacji importu w React. \\n\\n default export NAZWA \\n\\n Eksportowanie nazwanych warto\u015bci: Ka\u017cdy modu\u0142 mo\u017ce mie\u0107 kilka nazwanych parametr\xf3w i aby wyeksportowa\u0107 jeden z nich powinni\u015bmy u\u017cy\u0107 nast\u0119puj\u0105cej sk\u0142adni. \\n\\n export {PARAMETR, ...} \\n\\n I podobnie dla wielokrotnego takiego eksportu mo\u017cemy u\u017cy\u0107 przecinka do oddzielenia dw\xf3ch parametr\xf3w nazwy w obr\u0119bie aparatu kr\u0119conego. \\n\\n","img_3":"./img/export.png"},{"id":9,"title":"Hooki - hook stanu","desc":"Hook ten jest useStatem, wywo\u0142ujemy go z wewn\u0105trz kompnentu funkcyjnego, aby wzbogaci\u0107 go o lokalny stan. React zachowa ten stan pomi\u0119dzy kolejnymi renderowaniami. Mo\u017cesz wywo\u0142a\u0107 te funkcj\u0119 w procedurze obs\u0142ugi zdarzenia albo z innego miejsca. Dzia\u0142a to mniej wi\u0119cej tak samo, jak this.setState w komponencie klasowym, z t\u0105 r\xf3\u017cnic\u0105, \u017ce nie scala on starych i nowych warto\u015bci. Jedynym argumentem funkcji useState jest stan pocz\u0105tkowy. W przeciwie\u0144stwie do this.state, stan ten nie musi by\u0107 obiektem, ale nic nie szkodzi \u017ceby nim by\u0142. Warto\u015b\u0107 kt\xf3ra podajemy w argumencie ze stanem pocz\u0105tkowym jest wykorzystywana tylko podczas pierwszego renderowania. \\n\\n  Hooka stanu mo\u017cna u\u017cy\u0107 kilka razy w tym samym komponencie: \\n\\n","img_undertext1":"./img/useState.png","desc_2":"\\n Sk\u0142adnia przypisania destruktyzuj\u0105cego tablic mo\u017ce nada\u0107 r\xf3\u017cne nazwy zmiennym stanu, kt\xf3re zadeklarowali\u015bmy wywo\u0142uj\u0105c funkcj\u0119 useState.","subtitle_2":"Czym jest hook dos\u0142ownie?","desc_3":"Hooki s\u0105 funkcjami, kt\xf3re \'zachaczaj\u0105 si\u0119\' w cylku \u017cycia i mechanizmach Reacta. Hooki nie dzia\u0142aj\u0105 w klasach, ale dzi\u0119ki temu mo\u017cemy pos\u0142ugiwa\u0107 si\u0119 nimi bez klas."},{"id":10,"title":"Hook - hook efekt\xf3w","desc":"Hook effect, daje mo\u017cliwo\u015b\u0107 przeprowadzania efekt\xf3w na zewn\u0105trz komponentu funkcyjnego oraz ma uproszczon\u0105 form\u0119 interfejsu API w por\xf3wnaniu do componentDidMount(jest to odpowiednik useEffect dla komponentu klasowego). \\n\\n","img":"./img/useEffect.png","desc2":"\\n\\n Funkcja useEffect, wywo\u0142uj\u0119 tw\xf3j efekt zaraz po opr\xf3\u017cnieniu bufora zmian drzewa DOM. Efekty sa deklarowane wewn\u0105trz kompnentu i dzi\u0119ki temu maj\u0105 dost\u0119 do props\xf3w i state. React zawsze uruchamia efekty po ka\u017cdym renderowaniu. R\xf3wnie\u017c jak z useState, useEffect mo\u017cna u\u017cy\u0107 wi\u0119cej razy ni\u017c raz w komponencie."},{"id":11,"title":"Redux","desc":"Redux jest managerem stanu, jednym z za\u0142o\u017cen jest jednokierunkowy przep\u0142yw danych w aplikacji, kt\xf3ry nie powinien ich mutowa\u0107. Natomist je\u015bli potrzebuje zaktualizowa\u0107 dane, to wykonuje si\u0119 poprzez setState. \\n\\n Idea Redux opiera si\u0119 o za\u0142o\u017cenie, \u017ce stan aplikacji (dane) s\u0105 wynikiem poprzedniego (w tym pocz\u0105tkowego) stanu zmodyfikowanego przez akcje - dzi\u0119ki temu za\u0142o\u017ceniu mo\u017cliwe jest \u0142atwe testowanie, zapisywanie i wznawianie. \\n\\n ","img_undertext1":"./img/redux1.png","subtitle":"\\nStore","desc_2":"Najwa\u017cnieszym elementem reduxa jest store, s\u0105 tam przechowywane dane, s\u0105 przetwarzane akcje oraz store obs\u0142uguje bardziej z\u0142o\u017cone mechanizmy. Store tworzone jest poprzez wywo\u0142anie funkcji createStore i przekazanie do niej naszego reducera. \\n\\n store.dispatch(object) \\n\\n Funkcja dispatch pozwala na przekazanie akcji do store, co spowoduje wywo\u0142anie reducer\xf3w i zaktualizuje obiekty. \\n\\n","img_undertext2":"./img/store.png","subtitle_2":"\\nAkcje","desc_3":"Akcje w reduxie to po prostu obiekt, kt\xf3ry przyjmuj\u0119 w\u0142a\u015bciwo\u015b\u0107 type, typu string kt\xf3ry przybiera nazw\u0119 wykonywanej operacji. \\n\\n","img_3":"./img/actions.png","subtitle_3":"\\n Reducery","desc_4":"Reducery s\u0105 czystymi funkcjami, kt\xf3ra jest wywo\u0142ana z aktualnym stanem oraz przeprowadza odpowiednie akcje i zwraca nowy stan, je\u017celi reducer nie da rady obs\u0142u\u017cy\u0107 si\u0119 dan\u0105 akcj\u0105, powinien zwr\xf3cic niezmodyfikowany stan \\n\\n","img_5":"./img/reducer.png"},{"id":12,"title":"Context API","desc":"Pozwala nam wprowadzi\u0107 do aplikacji pewnych globalnych ustawie\u0144, od kt\xf3rych mog\u0105 zale\u017ce\u0107 niekt\xf3re komponenty. API nowej wersji Reacta wzbogacone zosta\u0142o o metod\u0119 createContext, kt\xf3rej zadaniem jest, jak sama nazwa wskazuje, tworzenie kontekstu. W typowej aplikacji reactowej dane przekazywane s\u0105 z g\xf3ry w d\xf3\u0142 (od rodzica do dziecka) poprzez w\u0142a\u015bciwo\u015bci. Mo\u017ce si\u0119 to jednak okaza\u0107 zbyt uci\u0105\u017cliwe w przypadku niekt\xf3rych danych (np. preferencje j\u0119zykowe, schemat UI czy paleta kolor\xf3w), z kt\xf3rych korzystaj\u0105 komponenty na wielu poziomach struktury. Konteksty umo\u017cliwiaj\u0105 wsp\xf3\u0142dzielenie pewnych warto\u015bci przez takie komponenty bez konieczno\u015bci przekazywania ich jako w\u0142a\u015bciwo\u015bci na ka\u017cdym poziomie drzewa. ","subtitle":""},{"id":13,"title":"Por\xf3wnanie Context API do Reduxa","desc_2":"Moim zdaniem to czy b\u0119dziemy korzysta\u0107 z Context API b\u0105d\u017a Reduxa jest zale\u017ane od tego jak du\u017cy b\u0119dzie nasza aplikacja, jak du\u017co b\u0119dziemy musieli przekierowywa\u0107 danych mi\u0119dzy komponentami i \u017ceby sporo stan\xf3w by\u0142o dostepnych globalnie. Wydaje mi si\u0119, \u017ce je\u017celi tw\xf3j projekt b\u0119dzie ma\u0142y i globalny stan niewielki to Context API b\u0119dzie bardziej pasowa\u0142. Je\u015bli natomiast tw\xf3j projekt b\u0119dzie du\u017cy to Redux mo\u017ce okaza\u0107 si\u0119 lepszym rozwi\u0105zaniem, kt\xf3re poza dostarczaniem globalnego stanu dla aplikacji, dodatkowo pomaga lepiej ustrukturyzowa\u0107 ca\u0142\u0105 aplikacj\u0119."},{"id":14,"title":"GSAP - Animacje","desc":"Jest to zbi\xf3r narz\u0119dzi do tworzenia animacji w JS. Obs\u0142uguje podstawowe funkcje animacji, takich jak ruch w dowolnym kierunku, czas trwania, zmiana koloru, prze\u017aroczysto\u015bci, skalowania, obracania obiektu. Na tym jednak si\u0119 nie ko\u0144czy. Mo\u017cna manipulowa\u0107 op\xf3\u017anieniem animacji, krzyw\u0105 pr\u0119dko\u015bci, wykonywa\u0107 przekszta\u0142cenia 3D. Animacje mog\u0105 nachodzi\u0107 na siebie lub wyst\u0119powa\u0107 jedna po drugiej. Jest te\u017c sporo wtyczek z zaawansowanymi funkcjami.","subtitle":"U\u017cycie \\n\\n","img":"./img/gsapExample.png","desc_2":"Wystarczy zainstalowa\u0107 poprzez \'npm install gsap\' i zaimportowa\u0107 jak wy\u017cej, by m\xf3c korzysta\u0107 z GSAPA.","subtitle_2":"R\xf3znice do CSS","desc_3":"Nie ma sensu zaci\u0105ga\u0107 dodatkowej paczki GSAP do prostych i jednostkowych animacji takich jak zmiana koloru, zmiana wielko\u015bci, przesuni\u0119cie obiektu itp. CSS poradzi sobie z tym bez problemu. Prawdziwa moc tego frameworku ukazuje si\u0119, gdy tworzymy stron\u0119 lub aplikacj\u0119 naszpikowan\u0105 bardziej skomplikowanymi animacjami.\\n\\n-GASP posiada lini\u0119 czasu, kt\xf3ra sprawia, \u017ce d\u0142ugie i skomplikowane animacje \u0142atwo si\u0119 kontroluje, co w CSS mo\u017ce by\u0107 udr\u0119k\u0105. \\n-Animacje mog\u0105 by\u0107 zagnie\u017cd\u017cone. \\n-Ma lepsze odwzorowanie fizyki. Posiada \u0142atw\u0105 i zwart\u0105 sk\u0142adni\u0119. \\n-Nie wymaga prefiks\xf3w. "},{"id":15,"title":"Fetch API","desc":"Fetch API zapewnia interfejsowi JS uzyskanie dost\u0119pu i manipulowanie cz\u0119\u015bciami HTTP, mi\u0119dzy innymi \u017c\u0105dania i odpowiedzi. Zapewnia r\xf3wnie\u017c globaln\u0105 metod\u0119 fetch(), kt\xf3ra zapewnia \u0142atwy i logiczny spos\xf3b pobierania danych z calej sieci.\\n\\n Ten rodzaj funkcjonalno\u015bci zosta\u0142 wcze\u015bniej osi\u0105gni\u0119ty za pomoc\u0105 XMLHttpRequest. Fetch zapewnia lepsz\u0105 alternatyw\u0119, kt\xf3ra mo\u017ce by\u0107 \u0142atwo wykorzystana przez inne technologie.","img":"./img/Fetch.png","desc_2":"\\n Wy\u017cej pobieramy plik JSON w ca\u0142o\u015bci i wy\u015bwietlamy go w konsoli. Najprostsze u\u017cycie fetch() bierze jeden argument - \u015bcie\u017ck\u0119 do zasobu, kt\xf3ry chcesz pobra\u0107 - i zwraca obietnic\u0119 zawieraj\u0105c\u0105 odpowied\u017a(response). \\n Inny przyk\u0142ad wykorzystania fetch:","img_2":"./img/FetchAPI.png"}]')}},[[27,1,2]]]);
//# sourceMappingURL=main.b0f8daad.chunk.js.map